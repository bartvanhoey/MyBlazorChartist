@inject IJSRuntime JSRuntime

<div @ref="elem" class="ct-chart" @attributes="@ExtraAttributes"></div>


@* Pass 'this' instance as a cascading parameter to descendants in tree *@
<CascadingValue Value="@this">
    @ChildContent
</CascadingValue>

@code {
  ElementReference elem;

  [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object> ExtraAttributes { get; set; }
  [Parameter] public RenderFragment ChildContent { get; set; }
  [Parameter] public ChartType Type { get; set; }
  [Parameter] public ChartData Data { get; set; } = new ChartData();
  
  [Parameter] public IEnumerable<string> Labels { get; set; }

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      await JSRuntime.InvokeVoidAsync("BlazorChartist.createChart", elem, Type.ToString());
    }

    if (Labels != null)
    {
      Data.Labels = Labels;
    }

    await JSRuntime.InvokeVoidAsync("BlazorChartist.updateChart", elem, Data);
  }
}
